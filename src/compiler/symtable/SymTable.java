package compiler.symtable;

/**
 * <h1>符号表类</h1><br />
 * 符号表是用于存放程序语言中出现的<b>标识符</b>的<br />
 * 无论编译策略是否分趟，符号表的地位和作用都一样
 * 
 * <hr/>
 * 
 * 符号表，即符号的线性表集合
 * 
 * <hr />
 * 
 * 符号表的功能：<br />
 * 1. 收集符号属性<br />
 * 2. 上下文语义的合法性检查分析<br />
 * 3. 作为目标代码生成阶段的地址分配的依据<br>
 * 
 * <hr />
 * 
 * 1. 收集符号属性<br />
 * 例如：<i>int a[2]={1,2}</i><br />
 * a. 符号名(索引符号)<br />
 * b. 类型(存取运算方式)<br />
 * c. 矢量(地址线性集合)<br />
 * d. 地址/值(存储地址)<br />
 * e. 作用域？<br />
 * f. 变量生命周期(static auto)<br />
 * g. 访问权限检查(private public)<br />
 * 
 * <hr />
 * 
 * 2. 上下文语义的合法性检查分析<br />
 * 同一多次出现时的一致性检查<br />
 * a.多次定义检查<br />
 * b.无定义引用检查<br />
 * c.类型引用错误检查<br />
 * d.矢量边界引用错误检查<br />
 * 
 * <hr />
 * 
 * 3. 作为目标代码生成阶段的地址分配的依据<br>
 * a.存储位置、相对位置<br />
 * b.分配区域(auto \ static)<br />
 * c.
 * <hr />
 * 
 * @author keepf
 *
 */
public class SymTable {

}
